@startuml
'https://plantuml.com/class-diagram

abstract class Edible{
hasBeenFertilized;
}
abstract class Animal {
makeNoise;
}
abstract class FarmVehicle {
operate;
makeNoise;
}
abstract class Aircraft {
fly;
makeNoise;
}
abstract class Farm {
}

interface Eater {
eat(Edible obj);
}
interface NoiseMaker {
makeNoise;
}
interface Rideable {}
interface Produce {
yield(Edible obj) if hasBeenFertilized;
}
interface Vehicle {
makeNoise;
}
interface Person {
eat(Edible obj);
makeNoise;
}
interface Rider {
mount(Rideable obj)
dismount(Rideable obj)
eat(Edible obj);
makeNoise;
}
interface Botanist {
plant (Crop crop, CropRow row);
eat(Edible obj);
makeNoise;
}

class Horse {
makeNoise;
}
class Chicken {
makeNoise;
yield(EdibleEgg egg) if hasBeenFertilized == false
}
class EdibleEgg {
hasBeenFertilized;
}
class Field<CropRow> {
store(CropRow);
}
class CropRow<Crop> {
store(Crop);
}
class Crop {
yield (Edible obj) if hasBeenFertilized && hasBeenHarvested;
}
class CornStalk {
yield(EarCorn);
}
class EarCorn {
hasBeenFertilized;
hasBeenHarvested;
}
class TomatoPlant {
yield(Tomato);
}
class Tomato {
hasBeenFertilized;
hasBeenHarvested;
}
class Tractor {
harvest(Crop crop);
operate;
makeNoise;
}
class CropDuster {
fertilize(CropRow row);
fly;
makeNoise;
}
class Farmer {
mount(Rideable obj)
dismount(Rideable obj)
eat(Edible obj);
makeNoise;
plant (Crop crop, CropRow row);
}
class Stable<Horse> {
store (Horse horse);
}
class FarmHouse<Person> {
store (Person person)
}
class ChickenCoop<Chicken> {
store (Chicken)
}



Eater <|-- Animal
NoiseMaker <|-- Animal

Animal <|-- Horse
Rideable <|-- Horse

Animal <|-- Chicken
Produce <|-- Chicken

Person <|-- Rider
Person <|-- Botanist

Field <|-- CropRow

NoiseMaker <|--- Vehicle
Rideable <|--- Vehicle

Vehicle <|--- Aircraft
Vehicle <|--- FarmVehicle

Produce <|--- Crop

Crop <|--- CornStalk
Crop <|--- TomatoPlant

Edible <|-- EarCorn
Edible <|-- Tomato
Edible <|--- EdibleEgg

NoiseMaker <|---- Person
Eater <|---- Person

FarmVehicle <|-- Tractor
Aircraft <|-- CropDuster

Botanist <|---- Farmer
Rider <|---- Farmer

Farm <|-- FarmHouse
Farm <|-- ChickenCoop
Farm <|-- Stable

@enduml